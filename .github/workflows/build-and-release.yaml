name: Build

on:
  push:
    branches:
      - master
  create:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

defaults:
  run:
    shell: bash

env:
  SCM_LOCAL_SCHEME: no-local-version

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,   python: 3.9,  arch: x64 }
          - { os: ubuntu-latest,   python: 3.8,  arch: x64 }
          - { os: ubuntu-latest,   python: 3.7,  arch: x64 }
          - { os: ubuntu-latest,   python: 3.6,  arch: x64 }

          - { os: macos-latest,    python: 3.9,  arch: x64 }
          - { os: macos-latest,    python: 3.8,  arch: x64 }
          - { os: macos-latest,    python: 3.7,  arch: x64 }
          - { os: macos-latest,    python: 3.6,  arch: x64 }

          - { os: windows-latest,  python: 3.9,  arch: x64 }
          - { os: windows-latest,  python: 3.8,  arch: x64 }
          - { os: windows-latest,  python: 3.7,  arch: x64 }
          - { os: windows-latest,  python: 3.6,  arch: x64 }

          - { os: windows-latest,  python: 3.9,  arch: x86 }
          - { os: windows-latest,  python: 3.8,  arch: x86 }
          - { os: windows-latest,  python: 3.7,  arch: x86 }
          - { os: windows-latest,  python: 3.6,  arch: x86 }

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Ignore Tags
      if: github.event.ref_type != 'tag'
      run: git tag -d $(git tag --points-at HEAD)

    - name: Install Miniconda
      # 2.0.1 until https://github.com/conda-incubator/setup-miniconda/pull/189 merged
      # and released. Then can change to v2
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
        miniconda-version: "latest"

    - name: Conda package (Unix)
      if: runner.os != 'Windows'
      shell: bash -l {0}
      run: |
        conda install -c cbillington setuptools-conda
        setuptools-conda build .

    - name: Conda Package (Windows)
      if: runner.os == 'Windows'
      shell: cmd /C CALL {0}
      run: |
        conda install -c cbillington setuptools-conda && ^
        setuptools-conda build .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: conda_packages
        path: ./conda_packages

  upload:
    name: Upload to Anaconda Cloud
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: conda_packages
        path: ./conda_packages

    - name: Install Miniconda and cloud client
      run: |
        curl -LO "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" 
        bash Miniconda3-latest-Linux-x86_64.sh -b -p .miniconda
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda install anaconda-client

    - name: Upload to test label
      if: github.event.ref_type != 'tag'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user labscript-suite \
          --label test \
          conda_packages/*/*
          
    - name: Upload to main label
      if: github.event.ref_type == 'tag'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user labscript-suite \
          conda_packages/*/*
