name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  SCM_LOCAL_SCHEME: no-local-version
  ANACONDA_USER: labscript-suite

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
    env:
      CONDA_PYTHONS: '3.8,3.9,3.10,3.11,3.12'

    if: github.repository == 'chrisjbillington/setuptools-conda'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ignore Tags
        if: github.event.ref_type == 'push' && contains(github.ref, '/tags')
        run: git tag -d $(git tag --points-at HEAD)

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          auto-update-conda: true
          conda-remove-defaults: true
          auto-activate-base: true
          activate-environment: ""

      - name: Conda package
        shell: bash -l {0}
        run: python -m setuptools_conda build --pythons=$CONDA_PYTHONS .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: conda_packages-${{ matrix.os }}
          path: ./conda_packages

  release:
    if: github.event_name != 'pull_request'
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: conda_packages-*
          path: ./conda_packages
          merge-multiple: true

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          auto-update-conda: true
          conda-remove-defaults: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install Anaconda cloud client
        shell: bash -l {0}
        run: conda install anaconda-client

      - name: Publish to Anaconda test label
        if: "!contains(github.ref, '/tags')"
        shell: bash -l {0}
        run: |
          anaconda \
            --token ${{ secrets.ANACONDA_API_TOKEN }} \
            upload \
            --skip-existing \
            --user $ANACONDA_USER \
            --label test \
            conda_packages/*/*

      - name: Publish to Anaconda main label
        shell: bash -l {0}
        if: contains(github.ref, '/tags')
        run: |
          anaconda \
            --token ${{ secrets.ANACONDA_API_TOKEN }} \
            upload \
            --skip-existing \
            --user $ANACONDA_USER \
            conda_packages/*/*
